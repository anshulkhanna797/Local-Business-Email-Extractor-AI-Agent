{
  "name": "Google Maps Email Scraper with HTTP Requests & JavaScript",
  "nodes": [
    {
      "parameters": {
        "content": "## 🗺️ STEP 1: Google Maps Data Extraction\n\nThis workflow starts by scraping Google Maps for business listings:\n\n**Process:** Uses HTTP requests to search Google Maps with queries like \"Calgary dentists\"\n**Output:** Raw HTML containing business listings and website URLs\n**Key:** No APIs required - direct HTML scraping\n\n**Note:** Replace search URL with your target location and business type",
        "height": 212,
        "width": 382
      },
      "id": "08fa289a-6efe-47fe-8994-7d785da479ce",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1216,
        -96
      ],
      "typeVersion": 1,
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "## 🔗 STEP 2: Website URL Processing\n\nExtracts and cleans business website URLs:\n\n1. **Extract URLs:** JavaScript regex finds all website URLs in Google Maps data\n2. **Filter Google URLs:** Removes irrelevant domains (google.com, gstatic, etc.)\n3. **Remove Duplicates:** Eliminates duplicate websites\n4. **Limit:** Controls batch size for testing (adjust for production)\n\n**Result:** Clean list of actual business websites ready for email extraction",
        "height": 216,
        "width": 380
      },
      "id": "51221aff-bb97-40ab-b71a-4abc5d5f6acf",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -816,
        -96
      ],
      "typeVersion": 1,
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "## 🔄 STEP 3: Smart Website Scraping\n\nProcesses each website individually to prevent IP blocking:\n\n**Loop Over Items:** Processes websites one by one with built-in delays\n**Scrape Site:** Downloads HTML content from each business website\n**Wait Nodes:** Prevent rate limiting and IP blocking\n**Error Handling:** Continues processing even if some sites fail\n\n**Critical:** The batching and delays are essential for reliable operation at scale",
        "height": 216,
        "width": 412
      },
      "id": "d69811bb-e83f-4411-9152-05ba48d5c7eb",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -416,
        -96
      ],
      "typeVersion": 1,
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "## 📧 STEP 4: Email Extraction & Export\n\nFinal processing pipeline:\n\n1. **Extract Emails:** JavaScript regex finds all email addresses in website HTML\n2. **Filter Out Empties:** Removes websites with no emails found\n3. **Split Out:** Converts email arrays into individual items\n4. **Remove Duplicates:** Final deduplication across all sources\n5. **Add to Sheet:** Exports clean email list to Google Sheets\n\n**Result:** Organized database of business emails ready for outreach",
        "height": 220,
        "width": 400
      },
      "id": "40df7622-79f3-4788-8d86-42db2474e7b9",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        16,
        -96
      ],
      "typeVersion": 1,
      "name": "Sticky Note3"
    },
    {
      "parameters": {},
      "id": "e9342ec9-b345-4f22-8fbd-b6c375e82ee5",
      "name": "When clicking ‘Test workflow’",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        -1232,
        304
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "6bc3a537-0d80-45cc-88de-60b29dc2bd98",
      "name": "Remove Duplicates",
      "type": "n8n-nodes-base.removeDuplicates",
      "position": [
        -384,
        304
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "bed4a001-15d0-4145-8ef3-d268be1b934d",
      "name": "Loop Over Items",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        144,
        304
      ],
      "typeVersion": 3
    },
    {
      "parameters": {
        "amount": 1
      },
      "id": "4023ddd0-ed3e-4f47-89be-0e3b7023630d",
      "name": "Wait",
      "type": "n8n-nodes-base.wait",
      "position": [
        608,
        480
      ],
      "webhookId": "19cc6ed4-4fe7-485b-b879-c679e4b3374d",
      "typeVersion": 1.1
    },
    {
      "parameters": {},
      "id": "22b03a07-4b98-4e82-b83e-3af1ac9fd665",
      "name": "Wait1",
      "type": "n8n-nodes-base.wait",
      "position": [
        368,
        208
      ],
      "webhookId": "0fe34756-6e43-4603-8891-5747a9a6500a",
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "fieldToSplitOut": "emails",
        "options": {}
      },
      "id": "18e09524-e40b-49f8-a953-79f912f0373e",
      "name": "Split Out",
      "type": "n8n-nodes-base.splitOut",
      "position": [
        784,
        128
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "jsCode": "const input = $input.first().json.data\nconst regex = /[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.(?!jpeg|jpg|png|gif|webp|svg)[a-zA-Z]{2,}/g\nconst emails = input.match(regex)\nreturn {json: {emails:emails}}"
      },
      "id": "ed3df035-13bc-499b-bf3d-015550653d25",
      "name": "Extract Emails",
      "type": "n8n-nodes-base.code",
      "position": [
        912,
        496
      ],
      "typeVersion": 2,
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "const input = $input.first().json.data\nconst regex = /https?:\\/\\/[^\\/\\s\"'>]+/g\nconst websites = input.match(regex)\nreturn websites.map(website => ({json:{website}}))"
      },
      "id": "a1fac964-4ed2-451c-b199-545e5d608a6e",
      "name": "Extract URLs",
      "type": "n8n-nodes-base.code",
      "position": [
        -848,
        208
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "url": "https://www.google.com/maps/search/interior+designers+bangalore",
        "options": {
          "allowUnauthorizedCerts": true,
          "response": {
            "response": {
              "fullResponse": true
            }
          }
        }
      },
      "id": "961730d7-50d7-4566-8688-0309517fa094",
      "name": "Scrape Google Maps",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -1056,
        208
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "url": "={{ $json.website }}",
        "options": {
          "redirect": {
            "redirect": {
              "followRedirects": false
            }
          }
        }
      },
      "id": "d31bdcfb-5d4c-40cd-90df-bbab71797c4c",
      "name": "Scrape Site",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        320,
        480
      ],
      "typeVersion": 4.2,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "a6786c58-424a-409a-b87f-8a7592cb7944",
              "operator": {
                "type": "array",
                "operation": "exists",
                "singleValue": true
              },
              "leftValue": "={{ $json.emails }}",
              "rightValue": ""
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "9bbf280f-6625-4a0c-b752-d3a8f27ee544",
      "name": "Filter Out Empties",
      "type": "n8n-nodes-base.filter",
      "position": [
        560,
        176
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "bf0a5053-9660-457c-9581-964793bb6d7d",
              "operator": {
                "type": "string",
                "operation": "notContains"
              },
              "leftValue": "={{ $json.website }}",
              "rightValue": "schema"
            },
            {
              "id": "9110b9e0-12aa-45cc-bde0-9eda8c10970e",
              "operator": {
                "type": "string",
                "operation": "notContains"
              },
              "leftValue": "={{ $json.website }}",
              "rightValue": "google"
            },
            {
              "id": "fb9b6ed6-96a5-4560-ab10-b8a4b9a61a2b",
              "operator": {
                "type": "string",
                "operation": "notContains"
              },
              "leftValue": "={{ $json.website }}",
              "rightValue": "gg"
            },
            {
              "id": "10500c0b-cdbd-4816-aba3-df60d69845dc",
              "operator": {
                "type": "string",
                "operation": "notContains"
              },
              "leftValue": "={{ $json.website }}",
              "rightValue": "gstatic"
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "b560f2be-103b-4d45-80ad-7e4f50299ba0",
      "name": "Filter Google URLs",
      "type": "n8n-nodes-base.filter",
      "position": [
        -640,
        288
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "c829f817-e7a3-4bf1-91d8-654f45487ffc",
      "name": "Remove Duplicates (2)",
      "type": "n8n-nodes-base.removeDuplicates",
      "position": [
        960,
        288
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "maxItems": 5
      },
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        -128,
        288
      ],
      "id": "aba90e9c-953f-4ad7-bf54-ff702d91b401",
      "name": "Limit"
    },
    {
      "parameters": {
        "operation": "create",
        "documentId": {
          "__rl": true,
          "value": "https://docs.google.com/spreadsheets/d/1wricP6bhv_R-A3sTNOemErVm1aPDvCi5VaFrHFvP6l4/edit?gid=0#gid=0",
          "mode": "url"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        1184,
        464
      ],
      "id": "fe1ccc13-c7fd-4202-9244-dfe1334fad55",
      "name": "Create sheet",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "21IqtN2cItwRrPjC",
          "name": "Google Sheets account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Wait": {
      "main": [
        [
          {
            "node": "Extract Emails",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait1": {
      "main": [
        [
          {
            "node": "Filter Out Empties",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Remove Duplicates (2)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Scrape Site": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract URLs": {
      "main": [
        [
          {
            "node": "Filter Google URLs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Emails": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Wait1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Scrape Site",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Remove Duplicates": {
      "main": [
        [
          {
            "node": "Limit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter Google URLs": {
      "main": [
        [
          {
            "node": "Remove Duplicates",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter Out Empties": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Scrape Google Maps": {
      "main": [
        [
          {
            "node": "Extract URLs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Remove Duplicates (2)": {
      "main": [
        [
          {
            "node": "Create sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "Scrape Google Maps",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "d3ee7c5c-2c25-4980-87be-38a9659fd638",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "3a5af67ab4204b68e9e7a759479a990def093f9a68fc3aacd01c42b6a25332d5"
  },
  "id": "dpYzZDPd0ZAjocbG",
  "tags": []
}